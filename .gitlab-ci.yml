variables:
  PROJECT: "The name of your openshift namespace aka project"
  PROJECT_TITLE: "client-service-template-example"
  MAVEN_BUILD_IMAGE: $CI_HARBOR_REGISTRY/ghcr/graalvm/native-image:22.3.2
  DOCKERFILE_PATH: $CI_PROJECT_DIR/application/src/main/docker/Dockerfile.native-micro
  MAVEN_CLI: ./mvnw

include:
  project: common/pipeline/templates
  file: .gitlab-ci-base.yml
  ref: "3"

get-version:
  extends: .get-version-base

# Use the maven build for native images
maven-build:
  extends: .maven-build-native-base

#Use the sonarqube check for native images
sonarqube-check:
  extends: .sonarqube-check-native-base

publish-docker-image:
  stage: publish
  image:
    name: $CI_HARBOR_REGISTRY/gcr/kaniko-project/executor:debug
    entrypoint: [ "" ]
  script:
    - mkdir -p /kaniko/.docker
    - ls -lh application/target/*
    - echo "{\"auths\":{\"$CI_HARBOR_REGISTRY\":{\"username\":\"$CI_HARBOR_REGISTRY_USERNAME\",\"password\":\"$CI_HARBOR_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - |
      /kaniko/executor \
      --build-arg "CI_HARBOR_REGISTRY=$CI_HARBOR_REGISTRY" \
      --context "$CI_PROJECT_DIR" \
      --dockerfile "$DOCKERFILE_PATH" \
      --label "APP_VERSION=${VERSION}" \
      --label "CI_PROJECT_URL=${CI_PROJECT_URL}" \
      --label "CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME}" \
      --label "CI_COMMIT_SHA=${CI_COMMIT_SHA}" \
      --label "CI_COMMIT_TIMESTAMP=${CI_COMMIT_TIMESTAMP}" \
      --label "CI_PROJECT_NAME=${CI_PROJECT_NAME}" \
      --label "CI_PIPELINE_ID=${CI_PIPELINE_ID}" \
      --label "CI_PIPELINE_IID=${CI_PIPELINE_IID}" \
      --label "CI_PIPELINE_URL=${CI_PIPELINE_URL}" \
      --destination ${DOCKER_IMAGE_NAME}:${VERSION} \
      --destination ${DOCKER_IMAGE_NAME}:latest
  needs:
    - maven-build
